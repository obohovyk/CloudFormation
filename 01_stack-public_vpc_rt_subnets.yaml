AWSTemplateFormatVersion: 2010-09-09
Description: Create VPC and subnets for DemoApp

Parameters:

# !!!! FIX demo-public-subnet-b !!!!!!
# Main parameters for EC2 NATGW instance (filter)
#
  InstanceTypeParameter:
    Type: String
    Default: t2.micro
    AllowedValues: 
      - t2.nano
      - t2.micro
    Description: Enter t2.micro or t2.nano. Default is t2.micro.

  KeyPair:
    Description: 'SSH KeyPair'
    Type: 'AWS::EC2::KeyPair::KeyName'
    ConstraintDescription: 'fr_demo'

Resources:

#
# Main VPC configuration parameters
#
  DemoVPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: 10.20.0.0/20
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: demo-vpc
  IPv6CidrBlock:
    Type: 'AWS::EC2::VPCCidrBlock'
    Properties:
      VpcId: !Ref DemoVPC
      AmazonProvidedIpv6CidrBlock: true

  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: Name
          Value: demo-public-igw
  InternetGatewayAttachment:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref DemoVPC
      InternetGatewayId: !Ref InternetGateway
  EgressOnlyInternetGateway:
    Type: 'AWS::EC2::EgressOnlyInternetGateway'
    Properties:
      VpcId: !Ref DemoVPC

#
# Public Route Table + Subnets configuration
#
  PublicRT:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref DemoVPC
      Tags:
      - Key: Name
        Value: demo-public-rt
  PublicSubnetDefaultRoute:
    DependsOn: InternetGatewayAttachment
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      RouteTableId: !Ref PublicRT
      GatewayId: !Ref InternetGateway
  PublicSubnetDefaultIpv6Route:
    Type: AWS::EC2::Route
    Properties:
      DestinationIpv6CidrBlock: ::/0
      RouteTableId: !Ref PublicRT
      EgressOnlyInternetGatewayId: !Ref EgressOnlyInternetGateway

  PublicSubnetA:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref DemoVPC
      CidrBlock: 10.20.1.0/24
      AvailabilityZone: eu-central-1a
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: demo-public-subnet-a
  PublicSubnetARTAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref PublicRT
      SubnetId: !Ref PublicSubnetA

  PublicSubnetB:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref DemoVPC
      CidrBlock: 10.20.2.0/24
      AvailabilityZone: eu-central-1b
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: demo-public-subnet-b
  PublicSubnetBRTAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref PublicRT
      SubnetId: !Ref PublicSubnetB

#
# Private Route Table + Subnets configuration
#
  SecurityGroupNATGW:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !Ref DemoVPC
      GroupName: 'SG-NATGW'
      GroupDescription: Enable SSH via port 22
      SecurityGroupIngress:
        IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 10.20.0.0/20

  PrivateRT:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref DemoVPC
      Tags:
      - Key: Name
        Value: demo-private-rt

  NatGWEC2:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: 't2.micro'
      ImageId: 'ami-0469bb6b'
      KeyName: !Ref KeyPair
      SourceDestCheck: 'false'
      Tags:
        - Key: Name
          Value: nat-gw
      NetworkInterfaces:
        - GroupSet:
            - !Ref SecurityGroupNATGW
          AssociatePublicIpAddress: 'true'
          DeviceIndex: '0'
          DeleteOnTermination: 'true'
          SubnetId: !Ref PublicSubnetA

  PrivateSubnetDefaultRoute:
    DependsOn: InternetGatewayAttachment
    Type: 'AWS::EC2::Route'
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      RouteTableId: !Ref PrivateRT
      InstanceId: !Ref NatGWEC2
  PrivateSubnetDefaultIpv6Route:
    Type: AWS::EC2::Route
    Properties:
      DestinationIpv6CidrBlock: ::/0
      RouteTableId: !Ref PrivateRT
      EgressOnlyInternetGatewayId: !Ref EgressOnlyInternetGateway

  NATGWEIP:
    Type: 'AWS::EC2::EIP'
    Properties:
      Domain: vpc
      InstanceId: !Ref NatGWEC2

  PrivateSubnetA:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref DemoVPC
      CidrBlock: 10.20.3.0/24
      AvailabilityZone: eu-central-1a
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: demo-private-subnet-a
  PrivateSubnetARTAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref PrivateRT
      SubnetId: !Ref PrivateSubnetA

  PrivateSubnetB:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref DemoVPC
      CidrBlock: 10.20.4.0/24
      AvailabilityZone: eu-central-1b
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: demo-private-subnet-b
  PublicSubnetBRTAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref PrivateRT
      SubnetId: !Ref PrivateSubnetB

